# Generated by Django 3.0.7 on 2020-11-21 21:17

from decimal import Decimal
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import switchdeck.apps.switchdeck.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('account', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Full name of the game in english (may look from the shop page).', max_length=50, unique=True, verbose_name='Name')),
                ('slug', models.SlugField(max_length=30, verbose_name='Slug')),
                ('cover', models.ImageField(blank=True, help_text='Cover of the game box or any related image.', null=True, upload_to=switchdeck.apps.switchdeck.models.games_images_path, verbose_name='Cover')),
                ('description', models.TextField(blank=True, help_text='Description of the game. Related from shop page.', verbose_name='Description')),
                ('eshop_url', models.URLField(blank=True, help_text='Link to page there can locate additional information (nintendo eshop).', null=True, verbose_name='Link to eshop')),
            ],
            options={
                'verbose_name': 'Game',
                'verbose_name_plural': 'Games',
            },
        ),
        migrations.CreateModel(
            name='Lot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, help_text='Set game to can be founded through the global search.', verbose_name='Active')),
                ('desc', models.TextField(blank=True, help_text='Description leaved by the user', max_length=1000, verbose_name='Description')),
                ('prop', models.CharField(choices=[('k', 'keep'), ('s', 'sell'), ('b', 'buy'), ('w', 'wish')], default='k', help_text='Proposition of lot - what user want to do with this game.', max_length=1, verbose_name='Proposition')),
                ('price', models.DecimalField(decimal_places=2, default=Decimal('0'), help_text='Amount of money user want to buy/sell this game.', max_digits=6, verbose_name='Price')),
                ('public_date', models.DateTimeField(default=django.utils.timezone.now, help_text='Date of publication. Just additional information.', verbose_name='Public date')),
                ('up_time', models.DateTimeField(default=django.utils.timezone.now, help_text='Up time show last activity from the lot. The newest up time - the highest this lot in lists. Up time update from each comment, updating or etc.', verbose_name='Up time')),
                ('change_to', models.ManyToManyField(blank=True, help_text='List of games user want to change this game.', limit_choices_to=models.Q(('prop', 'b'), ('prop', 'w'), _connector='OR'), related_name='ready_change_to', to='switchdeck.Lot', verbose_name='Change to')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='switchdeck.Game', verbose_name='Game')),
                ('profile', models.ForeignKey(help_text='Related Profile. Represent the owner of ``Lot`` instance', on_delete=django.db.models.deletion.CASCADE, to='account.Profile', verbose_name='Profile')),
            ],
            options={
                'verbose_name': 'Lot',
                'verbose_name_plural': 'Lots',
                'ordering': ['-up_time'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True, help_text='Date of publication.', verbose_name='Timestamp')),
                ('text', models.TextField(max_length=300, verbose_name='Text')),
                ('author', models.ForeignKey(editable=False, help_text='Author of the comment.', on_delete=django.db.models.deletion.CASCADE, to='account.Profile', verbose_name='Author')),
                ('lot', models.ForeignKey(editable=False, help_text='Related lot.', on_delete=django.db.models.deletion.CASCADE, related_name='comments', related_query_name='comment', to='switchdeck.Lot', verbose_name='Lot')),
            ],
            options={
                'verbose_name': 'Comment',
                'verbose_name_plural': 'Comments',
                'ordering': ['timestamp'],
            },
        ),
    ]
