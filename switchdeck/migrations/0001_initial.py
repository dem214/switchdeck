# Generated by Django 2.2.4 on 2019-08-26 09:00

from decimal import Decimal
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.expressions
import django.utils.timezone
import switchdeck.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('cover', models.ImageField(blank=True, null=True, upload_to=switchdeck.models.games_images_path)),
                ('description', models.TextField(blank=True)),
                ('eshop_url', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GameList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('desc', models.TextField(blank=True, max_length=1000)),
                ('prop', models.CharField(choices=[('k', 'keep'), ('s', 'sell'), ('c', 'change'), ('b', 'buy'), ('w', 'wish')], default='k', max_length=1)),
                ('price', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=6)),
                ('public_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('up_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('change_to', models.ManyToManyField(blank=True, limit_choices_to=models.Q(models.Q(('prop', 'b'), ('prop', 'w'), _connector='OR'), ('profile', django.db.models.expressions.F('profile'))), related_name='ready_change_to', to='switchdeck.GameList')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='switchdeck.Game')),
            ],
            options={
                'ordering': ['-up_time'],
            },
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('games', models.ManyToManyField(related_name='owners', related_query_name='owner', through='switchdeck.GameList', to='switchdeck.Game')),
                ('place', models.ForeignKey(default=0, on_delete=django.db.models.deletion.SET_DEFAULT, to='switchdeck.Place')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='gamelist',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='switchdeck.Profile'),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('text', models.TextField(max_length=300)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('game_instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', related_query_name='comment', to='switchdeck.GameList')),
            ],
            options={
                'ordering': ['timestamp'],
            },
        ),
    ]
