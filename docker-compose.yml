version: '3'

services:
  db:
    image: postgres
    env_file: ./.envs/postgres
    container_name: switchdeck_db
    volumes: 
      - postgres_data:/var/lib/postgresql/data
    restart: always
  
  django: &django
    build:
      context: .
      dockerfile: Dockerfile
      cache_from: 
        - switchdeck_django
    image: switchdeck_django
    labels:
      - "traefik.enable=True"
      - "traefik.http.routers.web-router.rule=Host(`localhost`)"
      - "traefik.http.routers.web-router.service=django"
      - "traefik.http.routers.web-router.entrypoints=web"
      - "traefik.http.services.django.loadbalancer.server.port=8000"
      - "traefik.http.services.django.loadbalancer.server.scheme=http"
    depends_on:
      - db
      - minio
    env_file:
      - ./.envs/django
      - ./.envs/postgres
    volumes:
      - django_static:/app/static
      - django_media:/app/media
      - ./config/gunicorn/gunicorn.conf.py:/app/gunicorn.conf.py:ro
    command: /bin/bash /app/start.sh

  minio:
    image: minio/minio
    volumes: 
      - minio_data:/data
    env_file:
      ./.envs/minio
    command: server /data
  
  # traefik:
  #   image: traefik
  #   depends_on: 
  #     - django
  #   command:
  #     - "--providers.docker=true"
  #   volumes:
  #     - traefik:/etc/traefik/acme:z
  #     - ./config/traefik/traefik.yaml:/etc/traefik/traefik.yaml:ro
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #   ports:
  #     - "80:80"
  #     - "443:443"

  nginx:
    image: nginx
    depends_on:
      - django
      - minio
    volumes: 
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    # restart: always
    ports:
      - "80:80"

volumes: 
  postgres_data:
  django_static:
  django_media:
  traefik:
  minio_data:
